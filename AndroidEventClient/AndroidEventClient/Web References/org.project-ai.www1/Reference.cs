//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace AEC.org.project_ai.www1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IUserAccess", Namespace="http://tempuri.org/")]
    public partial class UserClientExchange : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesListForCurrentAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterNewAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilteredEventsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventFullDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFiltersListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFilterLastEventOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UserClientExchange() {
            this.Url = "http://www.project-ai.org/EventService/UserClient.svc";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event GetCategoriesListForCurrentAccountCompletedEventHandler GetCategoriesListForCurrentAccountCompleted;
        
        /// <remarks/>
        public event RegisterNewAccountCompletedEventHandler RegisterNewAccountCompleted;
        
        /// <remarks/>
        public event GetEventsListCompletedEventHandler GetEventsListCompleted;
        
        /// <remarks/>
        public event GetFilteredEventsListCompletedEventHandler GetFilteredEventsListCompleted;
        
        /// <remarks/>
        public event GetEventFullDescriptionCompletedEventHandler GetEventFullDescriptionCompleted;
        
        /// <remarks/>
        public event GetPhotoCompletedEventHandler GetPhotoCompleted;
        
        /// <remarks/>
        public event GetFiltersListCompletedEventHandler GetFiltersListCompleted;
        
        /// <remarks/>
        public event GetFilterCompletedEventHandler GetFilterCompleted;
        
        /// <remarks/>
        public event CreateFilterCompletedEventHandler CreateFilterCompleted;
        
        /// <remarks/>
        public event DeleteFilterCompletedEventHandler DeleteFilterCompleted;
        
        /// <remarks/>
        public event UpdateFilterLastEventCompletedEventHandler UpdateFilterLastEventCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRemoteAccess/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("session", IsNullable=true)]
        public string Login([System.Xml.Serialization.XmlElementAttribute("login", IsNullable=true)] string login1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Captcha captcha) {
            object[] results = this.Invoke("Login", new object[] {
                        login1,
                        password,
                        captcha});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string login1, string password, Captcha captcha) {
            this.LoginAsync(login1, password, captcha, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string login1, string password, Captcha captcha, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        login1,
                        password,
                        captcha}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IRemoteAccess/Logout", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string session) {
            this.Invoke("Logout", new object[] {
                        session});
        }
        
        /// <remarks/>
        public void LogoutAsync(string session) {
            this.LogoutAsync(session, null);
        }
        
        /// <remarks/>
        public void LogoutAsync(string session, object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[] {
                        session}, this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/GetCategoriesListForCurrentAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("categoriesList", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
        public CategoryShort[] GetCategoriesListForCurrentAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, long parentId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool parentIdSpecified, long rootId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool rootIdSpecified, int pos, [System.Xml.Serialization.XmlIgnoreAttribute()] bool posSpecified, int count, [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("GetCategoriesListForCurrentAccount", new object[] {
                        sessionId,
                        parentId,
                        parentIdSpecified,
                        rootId,
                        rootIdSpecified,
                        pos,
                        posSpecified,
                        count,
                        countSpecified});
            return ((CategoryShort[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesListForCurrentAccountAsync(string sessionId, long parentId, bool parentIdSpecified, long rootId, bool rootIdSpecified, int pos, bool posSpecified, int count, bool countSpecified) {
            this.GetCategoriesListForCurrentAccountAsync(sessionId, parentId, parentIdSpecified, rootId, rootIdSpecified, pos, posSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void GetCategoriesListForCurrentAccountAsync(string sessionId, long parentId, bool parentIdSpecified, long rootId, bool rootIdSpecified, int pos, bool posSpecified, int count, bool countSpecified, object userState) {
            if ((this.GetCategoriesListForCurrentAccountOperationCompleted == null)) {
                this.GetCategoriesListForCurrentAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesListForCurrentAccountOperationCompleted);
            }
            this.InvokeAsync("GetCategoriesListForCurrentAccount", new object[] {
                        sessionId,
                        parentId,
                        parentIdSpecified,
                        rootId,
                        rootIdSpecified,
                        pos,
                        posSpecified,
                        count,
                        countSpecified}, this.GetCategoriesListForCurrentAccountOperationCompleted, userState);
        }
        
        private void OnGetCategoriesListForCurrentAccountOperationCompleted(object arg) {
            if ((this.GetCategoriesListForCurrentAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesListForCurrentAccountCompleted(this, new GetCategoriesListForCurrentAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/RegisterNewAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RegisterNewAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] AccountPut account, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Captcha captcha) {
            this.Invoke("RegisterNewAccount", new object[] {
                        account,
                        captcha});
        }
        
        /// <remarks/>
        public void RegisterNewAccountAsync(AccountPut account, Captcha captcha) {
            this.RegisterNewAccountAsync(account, captcha, null);
        }
        
        /// <remarks/>
        public void RegisterNewAccountAsync(AccountPut account, Captcha captcha, object userState) {
            if ((this.RegisterNewAccountOperationCompleted == null)) {
                this.RegisterNewAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterNewAccountOperationCompleted);
            }
            this.InvokeAsync("RegisterNewAccount", new object[] {
                        account,
                        captcha}, this.RegisterNewAccountOperationCompleted, userState);
        }
        
        private void OnRegisterNewAccountOperationCompleted(object arg) {
            if ((this.RegisterNewAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterNewAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/GetEventsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("eventsList", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
        public EventShort[] GetEventsList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, int pos, [System.Xml.Serialization.XmlIgnoreAttribute()] bool posSpecified, int count, [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("GetEventsList", new object[] {
                        sessionId,
                        pos,
                        posSpecified,
                        count,
                        countSpecified});
            return ((EventShort[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEventsListAsync(string sessionId, int pos, bool posSpecified, int count, bool countSpecified) {
            this.GetEventsListAsync(sessionId, pos, posSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void GetEventsListAsync(string sessionId, int pos, bool posSpecified, int count, bool countSpecified, object userState) {
            if ((this.GetEventsListOperationCompleted == null)) {
                this.GetEventsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventsListOperationCompleted);
            }
            this.InvokeAsync("GetEventsList", new object[] {
                        sessionId,
                        pos,
                        posSpecified,
                        count,
                        countSpecified}, this.GetEventsListOperationCompleted, userState);
        }
        
        private void OnGetEventsListOperationCompleted(object arg) {
            if ((this.GetEventsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventsListCompleted(this, new GetEventsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/GetFilteredEventsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("eventsList", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
        public EventShort[] GetFilteredEventsList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, long filterId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filterIdSpecified, bool onlyNew, [System.Xml.Serialization.XmlIgnoreAttribute()] bool onlyNewSpecified, int pos, [System.Xml.Serialization.XmlIgnoreAttribute()] bool posSpecified, int count, [System.Xml.Serialization.XmlIgnoreAttribute()] bool countSpecified) {
            object[] results = this.Invoke("GetFilteredEventsList", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified,
                        onlyNew,
                        onlyNewSpecified,
                        pos,
                        posSpecified,
                        count,
                        countSpecified});
            return ((EventShort[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFilteredEventsListAsync(string sessionId, long filterId, bool filterIdSpecified, bool onlyNew, bool onlyNewSpecified, int pos, bool posSpecified, int count, bool countSpecified) {
            this.GetFilteredEventsListAsync(sessionId, filterId, filterIdSpecified, onlyNew, onlyNewSpecified, pos, posSpecified, count, countSpecified, null);
        }
        
        /// <remarks/>
        public void GetFilteredEventsListAsync(string sessionId, long filterId, bool filterIdSpecified, bool onlyNew, bool onlyNewSpecified, int pos, bool posSpecified, int count, bool countSpecified, object userState) {
            if ((this.GetFilteredEventsListOperationCompleted == null)) {
                this.GetFilteredEventsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilteredEventsListOperationCompleted);
            }
            this.InvokeAsync("GetFilteredEventsList", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified,
                        onlyNew,
                        onlyNewSpecified,
                        pos,
                        posSpecified,
                        count,
                        countSpecified}, this.GetFilteredEventsListOperationCompleted, userState);
        }
        
        private void OnGetFilteredEventsListOperationCompleted(object arg) {
            if ((this.GetFilteredEventsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilteredEventsListCompleted(this, new GetFilteredEventsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/GetEventFullDescription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("eventDescription", IsNullable=true)]
        public EventFullGet GetEventFullDescription([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, long eventId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool eventIdSpecified) {
            object[] results = this.Invoke("GetEventFullDescription", new object[] {
                        sessionId,
                        eventId,
                        eventIdSpecified});
            return ((EventFullGet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventFullDescriptionAsync(string sessionId, long eventId, bool eventIdSpecified) {
            this.GetEventFullDescriptionAsync(sessionId, eventId, eventIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetEventFullDescriptionAsync(string sessionId, long eventId, bool eventIdSpecified, object userState) {
            if ((this.GetEventFullDescriptionOperationCompleted == null)) {
                this.GetEventFullDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventFullDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetEventFullDescription", new object[] {
                        sessionId,
                        eventId,
                        eventIdSpecified}, this.GetEventFullDescriptionOperationCompleted, userState);
        }
        
        private void OnGetEventFullDescriptionOperationCompleted(object arg) {
            if ((this.GetEventFullDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventFullDescriptionCompleted(this, new GetEventFullDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/GetPhoto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("photo", IsNullable=true)]
        public Photo GetPhoto([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, long photoId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool photoIdSpecified) {
            object[] results = this.Invoke("GetPhoto", new object[] {
                        sessionId,
                        photoId,
                        photoIdSpecified});
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        public void GetPhotoAsync(string sessionId, long photoId, bool photoIdSpecified) {
            this.GetPhotoAsync(sessionId, photoId, photoIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetPhotoAsync(string sessionId, long photoId, bool photoIdSpecified, object userState) {
            if ((this.GetPhotoOperationCompleted == null)) {
                this.GetPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPhotoOperationCompleted);
            }
            this.InvokeAsync("GetPhoto", new object[] {
                        sessionId,
                        photoId,
                        photoIdSpecified}, this.GetPhotoOperationCompleted, userState);
        }
        
        private void OnGetPhotoOperationCompleted(object arg) {
            if ((this.GetPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPhotoCompleted(this, new GetPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/GetFiltersList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("filtersList", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
        public FilterShort[] GetFiltersList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId) {
            object[] results = this.Invoke("GetFiltersList", new object[] {
                        sessionId});
            return ((FilterShort[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFiltersListAsync(string sessionId) {
            this.GetFiltersListAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetFiltersListAsync(string sessionId, object userState) {
            if ((this.GetFiltersListOperationCompleted == null)) {
                this.GetFiltersListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFiltersListOperationCompleted);
            }
            this.InvokeAsync("GetFiltersList", new object[] {
                        sessionId}, this.GetFiltersListOperationCompleted, userState);
        }
        
        private void OnGetFiltersListOperationCompleted(object arg) {
            if ((this.GetFiltersListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFiltersListCompleted(this, new GetFiltersListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/GetFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("filter", IsNullable=true)]
        public FilterFullGet GetFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, long filterId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filterIdSpecified) {
            object[] results = this.Invoke("GetFilter", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified});
            return ((FilterFullGet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilterAsync(string sessionId, long filterId, bool filterIdSpecified) {
            this.GetFilterAsync(sessionId, filterId, filterIdSpecified, null);
        }
        
        /// <remarks/>
        public void GetFilterAsync(string sessionId, long filterId, bool filterIdSpecified, object userState) {
            if ((this.GetFilterOperationCompleted == null)) {
                this.GetFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilterOperationCompleted);
            }
            this.InvokeAsync("GetFilter", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified}, this.GetFilterOperationCompleted, userState);
        }
        
        private void OnGetFilterOperationCompleted(object arg) {
            if ((this.GetFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilterCompleted(this, new GetFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/CreateFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] FilterFullPut filter, out long filterId, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool filterIdSpecified) {
            object[] results = this.Invoke("CreateFilter", new object[] {
                        sessionId,
                        filter});
            filterId = ((long)(results[0]));
            filterIdSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void CreateFilterAsync(string sessionId, FilterFullPut filter) {
            this.CreateFilterAsync(sessionId, filter, null);
        }
        
        /// <remarks/>
        public void CreateFilterAsync(string sessionId, FilterFullPut filter, object userState) {
            if ((this.CreateFilterOperationCompleted == null)) {
                this.CreateFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFilterOperationCompleted);
            }
            this.InvokeAsync("CreateFilter", new object[] {
                        sessionId,
                        filter}, this.CreateFilterOperationCompleted, userState);
        }
        
        private void OnCreateFilterOperationCompleted(object arg) {
            if ((this.CreateFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFilterCompleted(this, new CreateFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/DeleteFilter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFilter([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, long filterId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filterIdSpecified) {
            this.Invoke("DeleteFilter", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified});
        }
        
        /// <remarks/>
        public void DeleteFilterAsync(string sessionId, long filterId, bool filterIdSpecified) {
            this.DeleteFilterAsync(sessionId, filterId, filterIdSpecified, null);
        }
        
        /// <remarks/>
        public void DeleteFilterAsync(string sessionId, long filterId, bool filterIdSpecified, object userState) {
            if ((this.DeleteFilterOperationCompleted == null)) {
                this.DeleteFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFilterOperationCompleted);
            }
            this.InvokeAsync("DeleteFilter", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified}, this.DeleteFilterOperationCompleted, userState);
        }
        
        private void OnDeleteFilterOperationCompleted(object arg) {
            if ((this.DeleteFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFilterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IUserAccess/UpdateFilterLastEvent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFilterLastEvent([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string sessionId, long filterId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool filterIdSpecified, long eventId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool eventIdSpecified) {
            this.Invoke("UpdateFilterLastEvent", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified,
                        eventId,
                        eventIdSpecified});
        }
        
        /// <remarks/>
        public void UpdateFilterLastEventAsync(string sessionId, long filterId, bool filterIdSpecified, long eventId, bool eventIdSpecified) {
            this.UpdateFilterLastEventAsync(sessionId, filterId, filterIdSpecified, eventId, eventIdSpecified, null);
        }
        
        /// <remarks/>
        public void UpdateFilterLastEventAsync(string sessionId, long filterId, bool filterIdSpecified, long eventId, bool eventIdSpecified, object userState) {
            if ((this.UpdateFilterLastEventOperationCompleted == null)) {
                this.UpdateFilterLastEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFilterLastEventOperationCompleted);
            }
            this.InvokeAsync("UpdateFilterLastEvent", new object[] {
                        sessionId,
                        filterId,
                        filterIdSpecified,
                        eventId,
                        eventIdSpecified}, this.UpdateFilterLastEventOperationCompleted, userState);
        }
        
        private void OnUpdateFilterLastEventOperationCompleted(object arg) {
            if ((this.UpdateFilterLastEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFilterLastEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class Captcha {
        
        private string answerField;
        
        private byte[] dataField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Answer {
            get {
                return this.answerField;
            }
            set {
                this.answerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class FilterFullPut {
        
        private long[] categoryIdsField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private byte[] photoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public long[] CategoryIds {
            get {
                return this.categoryIdsField;
            }
            set {
                this.categoryIdsField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] Photo {
            get {
                return this.photoField;
            }
            set {
                this.photoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class FilterFullGet {
        
        private long[] categoryIdsField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private System.Nullable<long> photoIdField;
        
        private bool photoIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public long[] CategoryIds {
            get {
                return this.categoryIdsField;
            }
            set {
                this.categoryIdsField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PhotoId {
            get {
                return this.photoIdField;
            }
            set {
                this.photoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoIdSpecified {
            get {
                return this.photoIdFieldSpecified;
            }
            set {
                this.photoIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class FilterShort {
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private System.Nullable<long> photoIdField;
        
        private bool photoIdFieldSpecified;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PhotoId {
            get {
                return this.photoIdField;
            }
            set {
                this.photoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoIdSpecified {
            get {
                return this.photoIdFieldSpecified;
            }
            set {
                this.photoIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class Photo {
        
        private byte[] dataField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class EventFullGet {
        
        private string[] addressesField;
        
        private string[] categoriesField;
        
        private decimal costField;
        
        private bool costFieldSpecified;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private string descriptionField;
        
        private string durationField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private string[] organizersField;
        
        private long[] photoIdsField;
        
        private System.Nullable<long> primaryPhotoIdField;
        
        private bool primaryPhotoIdFieldSpecified;
        
        private System.DateTime publicationDateField;
        
        private bool publicationDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Addresses {
            get {
                return this.addressesField;
            }
            set {
                this.addressesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public decimal Cost {
            get {
                return this.costField;
            }
            set {
                this.costField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CostSpecified {
            get {
                return this.costFieldSpecified;
            }
            set {
                this.costFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="duration")]
        public string Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] Organizers {
            get {
                return this.organizersField;
            }
            set {
                this.organizersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public long[] PhotoIds {
            get {
                return this.photoIdsField;
            }
            set {
                this.photoIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrimaryPhotoId {
            get {
                return this.primaryPhotoIdField;
            }
            set {
                this.primaryPhotoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryPhotoIdSpecified {
            get {
                return this.primaryPhotoIdFieldSpecified;
            }
            set {
                this.primaryPhotoIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PublicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublicationDateSpecified {
            get {
                return this.publicationDateFieldSpecified;
            }
            set {
                this.publicationDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class EventShort {
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string nameField;
        
        private string organizerNameField;
        
        private System.Nullable<long> primaryPhotoIdField;
        
        private bool primaryPhotoIdFieldSpecified;
        
        private System.DateTime publicationDateField;
        
        private bool publicationDateFieldSpecified;
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganizerName {
            get {
                return this.organizerNameField;
            }
            set {
                this.organizerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrimaryPhotoId {
            get {
                return this.primaryPhotoIdField;
            }
            set {
                this.primaryPhotoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryPhotoIdSpecified {
            get {
                return this.primaryPhotoIdFieldSpecified;
            }
            set {
                this.primaryPhotoIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PublicationDate {
            get {
                return this.publicationDateField;
            }
            set {
                this.publicationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublicationDateSpecified {
            get {
                return this.publicationDateFieldSpecified;
            }
            set {
                this.publicationDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class AccountPut {
        
        private string aliasField;
        
        private byte[] avatarField;
        
        private string eMailField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string loginField;
        
        private string passwordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", IsNullable=true)]
        public byte[] Avatar {
            get {
                return this.avatarField;
            }
            set {
                this.avatarField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EMail {
            get {
                return this.eMailField;
            }
            set {
                this.eMailField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.33440")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/EventService.DTO")]
    public partial class CategoryShort {
        
        private int childrenCountField;
        
        private bool childrenCountFieldSpecified;
        
        private string descriptionField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private int levelField;
        
        private bool levelFieldSpecified;
        
        private string nameField;
        
        private long parentIdField;
        
        private bool parentIdFieldSpecified;
        
        private System.Nullable<long> primaryPhotoIdField;
        
        private bool primaryPhotoIdFieldSpecified;
        
        private long rootIdField;
        
        private bool rootIdFieldSpecified;
        
        /// <remarks/>
        public int ChildrenCount {
            get {
                return this.childrenCountField;
            }
            set {
                this.childrenCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChildrenCountSpecified {
            get {
                return this.childrenCountFieldSpecified;
            }
            set {
                this.childrenCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LevelSpecified {
            get {
                return this.levelFieldSpecified;
            }
            set {
                this.levelFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public long ParentId {
            get {
                return this.parentIdField;
            }
            set {
                this.parentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParentIdSpecified {
            get {
                return this.parentIdFieldSpecified;
            }
            set {
                this.parentIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> PrimaryPhotoId {
            get {
                return this.primaryPhotoIdField;
            }
            set {
                this.primaryPhotoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryPhotoIdSpecified {
            get {
                return this.primaryPhotoIdFieldSpecified;
            }
            set {
                this.primaryPhotoIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long RootId {
            get {
                return this.rootIdField;
            }
            set {
                this.rootIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RootIdSpecified {
            get {
                return this.rootIdFieldSpecified;
            }
            set {
                this.rootIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetCategoriesListForCurrentAccountCompletedEventHandler(object sender, GetCategoriesListForCurrentAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesListForCurrentAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesListForCurrentAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CategoryShort[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CategoryShort[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void RegisterNewAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEventsListCompletedEventHandler(object sender, GetEventsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventShort[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventShort[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFilteredEventsListCompletedEventHandler(object sender, GetFilteredEventsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilteredEventsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilteredEventsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventShort[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventShort[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetEventFullDescriptionCompletedEventHandler(object sender, GetEventFullDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventFullDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventFullDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EventFullGet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EventFullGet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetPhotoCompletedEventHandler(object sender, GetPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Photo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Photo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFiltersListCompletedEventHandler(object sender, GetFiltersListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFiltersListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFiltersListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilterShort[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilterShort[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void GetFilterCompletedEventHandler(object sender, GetFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FilterFullGet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FilterFullGet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void CreateFilterCompletedEventHandler(object sender, CreateFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long filterId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool filterIdSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void DeleteFilterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void UpdateFilterLastEventCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591